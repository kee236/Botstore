const { WebhookClient } = require('dialogflow-fulfillment');
const { SheetsName } = require('./SheetsName');
const { sendLineNotify } = require('./LineNotify'); // ‡∏™‡πà‡∏á Line Notify

const agent = new WebhookClient({ request, response });


function intentPrice(agent) {
  const productName = agent.parameters.productType;
  const price = ProductPrice('productName');

const msgPrice = {
  text: {
    text: [
      `**${productName} ‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó\nü´¥(‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ!!) ‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‚ú®`
    ] }, platform: "Facebook" };

// ‡∏õ‡∏∏‡πà‡∏° Quick Reply
const msgQuickReply = {
  quickReply: {
    title: "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ?",
    quickReplies: [
      { title: "‡πÇ‡∏≠‡∏ô", payload: "bank" },
      { title: "‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á", payload: "cod" }
    ]
  },
  platform: "Facebook"
};
  

  agent.add(msgPrice);
  agent.add(msgQuikreply);
  
  agent.add(new Payload('LINE', { quickReplies }, { sendAsMessage: true }));
}

function Payment(agent) {
  const paymentType = agent.parameters.paymentType;

  const productName = agent.context.get('intentPrice').parameters.productType;
  const price = ProductPrice('productName');
  
  

  let msgCod = "‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á ‡πÅ‡∏à‡πâ‡∏á ‡∏ä‡∏∑‡πà‡∏≠, ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á, ‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üßæ";

  let msgBanknumber = "‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£ : ‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢\n‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ : ‡∏≠‡∏±‡∏ö‡∏î‡∏∏‡∏•‡∏ß‡∏≠‡∏Æ‡∏∞ ‡∏°‡∏∞‡∏™‡∏á\n‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ : 1048727642";

  let msgBank = `üîπ ${product_name} ‡πÅ‡∏ö‡∏ö‡πÇ‡∏≠‡∏ô‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞ ${price} ‡∏ö‡∏≤‡∏ó ‡∏Ñ‡πà‡∏∞üí´\nüßæ ‡πÇ‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏•‡∏¥‡∏õ ‡πÅ‡∏•‡∏∞ ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡πà‡∏∞`;

  if (payment_type === 'cod') {
    agent.add(msgCod);
  } else if (payment_type === 'bank') {
    agent.add(msgBanknumber);
    agent.add(msgBank);
  }
}



  function intentConfirm(agent) {
   const productName = agent.context.get('intentPrice').parameters.productType;
   const price = ProductPrice('productName');

   const paymentType = agent.context.get('intentPayment').parameters.paymentType;
 
const cusName = agent.parameters.cusName;
const cusAddress = agent.parameters.cusAddress;
const cusPhone = agent.parameters.cusPhone;

saveCustomerData("cusName", "cusPhone", "cusAddress");

saveOrderData(cusName, cusPhone,cusAddress, productName, price, paymentType);
  
  let msgOrder = "***‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠***\n‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ${productName}\n ${paymentType} : ${price}\n------\n‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${customerName}\n‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${cusPhone}\n‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${cusAddress}";
  
  let msgThank = "‚ú®‡∏≠‡∏¥‡∏á‡∏ã‡∏≤‡∏≠‡∏±‡∏•‡∏•‡∏≠‡∏Æ ‚ú®‡∏ó‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏≤‡∏¢‡πÑ‡∏ß‡πÜ‡∏ô‡πà‡∏∞‡∏Ñ‡πà‡∏∞‚ù§Ô∏è";

  agent.add(msgOrder);
  agent.add(msgThank);
  }


let intentMap = new Map();
intentMap.set('intentPrice', intentPrice);
intentMap.set('intentPayment', intentPayment);
intentMap.set('intentConfirm', intentConfirm);
//intentMap.set('intentConfirm', intentConfirm); 
// ‡πÄ‡∏û‡∏¥‡πà‡∏° intentConfirm ‡∏•‡∏á‡πÉ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
agent.handleRequest(intentMap);






let productName = parameters.productType;
let price = getPrice(productName);
let msgPrice = `üîπ${productName} ‡∏£‡∏≤‡∏Ñ‡∏≤ ${price} ‡∏ö‡∏≤‡∏ó (‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ!! )‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Ñ‡πà‡∏∞ üí´`;



function getPrice(productName) {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Product");
  var data = sheet.getDataRange().getValues();
  
  for (var i = 1; i < data.length; i++) {
    if (data[i][1] === productName) {
      return data[i][2]; // ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2 (index 1)
    }
  }
  
  return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"; // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
}


function saveOrderData( )
 {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Order");
  var DateAdd = new Date() ;

   const productName = agent.context.get('intentPrice').parameters.productType;
  const price = ProductPrice('productName');

   const paymentType = agent.context.get('intentPayment').parameters.paymentType;
  
sheet.appendRow([DateAdd,cusName, cusAddress, cusPhone,productName, paymentType, price ] );

}


function saveCustomerData(cusName, cusAddress,cusPhone) {

  var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Customer");

  var DateAdd = new Date() ;
  sheet.appendRow([DateAdd,cusName, cusAddress, cusPhone ] );
}
